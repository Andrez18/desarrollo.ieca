---
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";

const projects = await getCollection("projects");

const years = Array.from(
  new Set(projects.map((p) => p.data.developedyear))
).sort((a, b) => b - a);
---

<Layout title="Proyectos - Desarrollo IECA">
  <Header />

  <section class="min-h-screen px-4 sm:px-6 lg:px-8" id="home">
    <div class="max-w-7xl mx-auto">
      <!-- Título principal -->
      <div class="text-center sm:py-8">
        <h1
          class="text-5xl sm:text-7xl md:text-[120px] lg:text-[180px] xl:text-[220px] font-regular tracking-[-1px] sm:tracking-[-2px] lg:tracking-[-4px] text-white leading-none"
        >
          PROYECTOS
        </h1>
      </div>

      <!-- Bloques de descripción -->
      <div
        class="grid grid-cols-1 md:grid-cols-2 gap-8 lg:gap-18 mb-12 lg:mb-16"
      >
        <div class="text-center md:text-left">
          <p
            class="text-[var(--text-blue-light)] text-base sm:text-lg md:text-xl leading-[129.7%] tracking-[-1px] mx-auto md:mx-0 max-w-sm"
          >
            Conoce los proyectos<br />
            desarrollados por nuestros<br />
            estudiantes.
          </p>
        </div>
        <div class="text-center md:text-right">
          <p
            class="text-[var(--text-blue-light)] text-base sm:text-lg md:text-xl leading-[129.7%] tracking-[-1px] mx-auto md:mx-0 max-w-sm md:ml-auto"
          >
            Clasifica y explora los<br />
            proyectos por los que más<br />
            te interesan.
          </p>
        </div>
      </div>

      <!-- Imagen principal -->
      <div class="w-full overflow-hidden rounded-lg">
        <img
          src="/image-1-projects.png"
          alt="Estudiante programando en laptop con código en pantalla"
          class="w-full h-[200px] sm:h-[250px] md:h-[300px] lg:h-[350px] xl:h-[400px] 2xl:h-[266px] object-cover"
        />
      </div>
    </div>
  </section>

  <!-- Segunda sección - Filtros y proyectos -->
  <section
    aria-label="Los proyectos más destacados"
    class="bg-gray-100 text-gray-900 py-8 sm:py-12 px-4 sm:px-6 mt-8 sm:mt-12"
  >
    <!-- Header con filtros -->
    <header class="max-w-6xl mx-auto mb-8 sm:mb-12">
      <div class="mb-6">
        <h2 class="text-xl sm:text-2xl font-medium mb-4">Filtrar por</h2>

        <div
          class="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4 sm:gap-6"
        >
          <div class="flex flex-col sm:flex-row gap-4 w-full sm:w-auto">
            <!-- Select Año -->
            <div class="relative">
              <select
                id="yearFilter"
                class="appearance-none px-4 py-2 rounded-full border border-black text-base sm:text-lg font-medium pr-8 focus:outline-none w-full sm:w-auto min-w-[120px]"
              >
                <option value="">Año</option>
                {years.map((year) => <option value={year}>{year}</option>)}
              </select>
              <span
                class="absolute right-3 top-1/2 -translate-y-1/2 pointer-events-none text-black"
                >⌄</span
              >
            </div>
          </div>

          <!-- Buscador -->
          <div class="relative w-full sm:w-48">
            <input
              type="text"
              id="search"
              placeholder="Buscar"
              class="w-full px-4 py-2 pr-10 rounded-full border border-black text-base sm:text-xl font-medium focus:outline-none"
            />
            <span class="absolute right-3 top-1/2 -translate-y-1/2 text-black">
              <i class="fa-solid fa-magnifying-glass"></i>
            </span>
          </div>
        </div>
      </div>
    </header>

    <!-- Contenido principal -->
    <div
      class="flex flex-col lg:flex-row pt-4 sm:pt-8 gap-8 lg:gap-12 max-w-6xl mx-auto"
    >
      <!-- Lado izquierdo - Info destacados -->
      <div class="lg:w-1/3">
        <h2
          class="text-[#1e1e1e] text-2xl sm:text-3xl lg:text-[40px] font-medium uppercase tracking-[-0.05em] leading-[120.8%] mb-3 mt-56"
        >
          Proyectos Destacados
        </h2>
        <p
          class="text-[#2e2e2e] text-lg sm:text-xl lg:text-2xl leading-[120.8%] tracking-[-0.02em] mb-6"
        >
          Algunos de nuestros proyectos destacados y más completos en cuanto a
          funcionalidad
        </p>

        <button
          id="showAllProjects"
          class="inline-flex items-center gap-2 text-[var(--text-light)] bg-[var(--background-dark)] rounded-[20px] w-full sm:w-[200px] h-[42px] text-center justify-center uppercase font-medium transition-all duration-500 ease-in-out hover:scale-105"
        >
          Mostrar todos
          <span
            class="flex items-center justify-center bg-[var(--text-light)] rounded-full w-[40px] h-[40px]"
          >
            <i
              class="fa-solid fa-arrow-right text-[15.4px] text-[var(--text-dark)]"
            ></i>
          </span>
        </button>
      </div>

      <!-- Grid de proyectos -->
      <div class="lg:w-2/3 space-y-8 sm:space-y-12">
        {
          projects.map((project, index) => {
            const { slug, data } = project;
            const { title, description, img, get } = data;
            const { git, site } = get;
            const num = String(index + 1).padStart(2, "0");

            return (
              <article
                class="project-item grid grid-cols-1 lg:grid-cols-10 items-start gap-4 sm:gap-6 pb-4 border-b border-gray-200 last:border-b-0"
                key={slug}
                data-title={title.toLowerCase()}
                data-description={description.toLowerCase()}
                data-year={data.developedyear}
              >
                {/* Imagen izquierda si index impar - solo en desktop */}
                {index % 2 !== 0 && (
                  <div class="hidden lg:block lg:col-span-3 lg:col-start-2 order-1">
                    <img
                      src={img}
                      alt={title}
                      class="w-full max-w-[210px] h-[150px] sm:h-[180px] object-cover rounded-lg bg-black"
                    />
                    <p class="text-[10px] sm:text-[11px] uppercase text-gray-500 mt-1">
                      Imagen del desarrollo
                    </p>
                  </div>
                )}

                {/* Contenido */}
                <div
                  class={`lg:col-span-7 lg:col-start-2 flex flex-col gap-3 order-2 ${
                    index % 2 !== 0 ? "lg:text-right lg:col-start-5" : "order-1"
                  }`}
                >
                  {/* Imagen en móvil */}
                  <div class="lg:hidden mb-4">
                    <img
                      src={img}
                      alt={title}
                      class="w-full max-w-[300px] h-[180px] object-cover rounded-lg mx-auto"
                    />
                    <p class="text-[11px] uppercase text-gray-500 mt-1 text-center">
                      Imagen del desarrollo
                    </p>
                  </div>

                  {/* Encabezado */}
                  <div
                    class={`flex flex-col sm:flex-row items-start sm:items-baseline gap-2 ${
                      index % 2 !== 0 ? "lg:justify-end" : ""
                    }`}
                  >
                    <span class="text-[#1919199C] text-sm sm:text-[15px] font-light order-1 sm:order-none">
                      /{num}
                    </span>
                    <h3 class="text-2xl sm:text-3xl lg:text-4xl xl:text-[48px] font-medium uppercase text-[var(--text-dark)] leading-tight">
                      {title}
                    </h3>
                  </div>

                  {/* Descripción */}
                  <p class="text-[#1e1e1e] font-regular text-lg sm:text-xl lg:text-2xl xl:text-[24px] leading-[128.7%] tracking-[-1%]">
                    {description}
                  </p>

                  {/* Enlaces */}
                  <div
                    class={`flex flex-col sm:flex-row gap-4 sm:gap-6 text-sm font-medium text-[var(--text-blue-dark)] uppercase mt-2 ${
                      index % 2 !== 0 ? "lg:justify-end" : ""
                    }`}
                  >
                    {git && (
                      <a
                        href={git}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="hover:underline transition-colors"
                      >
                        Explorar repositorio
                      </a>
                    )}
                    {site && (
                      <a
                        href={site}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="hover:underline transition-colors"
                      >
                        Ir al proyecto ↗
                      </a>
                    )}
                  </div>
                </div>

                {/* Imagen derecha si index par */}
                {index % 2 === 0 && (
                  <div class="hidden lg:block lg:col-span-2 order-3 ml-auto">
                    <img
                      src={img}
                      alt={title}
                      class="w-full max-w-[210px] h-[150px] sm:h-[180px] object-cover"
                    />
                    <p class="text-[10px] sm:text-[11px] uppercase text-gray-500 mt-1">
                      Imagen del desarrollo
                    </p>
                  </div>
                )}
              </article>
            );
          })
        }
      </div>
    </div>

    <p id="noResults" class="text-center text-gray-500 mt-6 hidden">
      No se encontró ningún proyecto
    </p>
  </section>
  <section class="max-w-6xl mx-auto my-8">
    <!-- Header -->
    <h1
      class="text-[var(--text-blue-light)] text-xl font-semibold mb-8 tracking-wide"
    >
      NUESTRO ÁLBUM DE FOTOS
    </h1>

    <!-- Photo Grid -->
    <div class="grid grid-cols-12 grid-rows-8 gap-4 h-96 relative">
      <!-- Large left photo -->
      <div class="col-span-6 row-span-8 relative overflow-hidden">
        <img
          src="/projects-home-1.png"
          alt="Dos personas trabajando en laptop"
          class="w-full h-full object-cover"
        />
      </div>

      <!-- Top right photo -->
      <div class="col-span-3 row-span-8 relative overflow-hidden">
        <img
          src="/projects-home-1.png"
          alt="Persona programando con múltiples pantallas"
          class="w-full h-full object-cover"
        />
      </div>

      <!-- Middle right photo -->
      <div class="col-span-3 row-span-4 relative overflow-hidden">
        <img
          src="/projects-home-1.png"
          alt="Manos escribiendo código en laptop"
          class="w-full h-full object-cover"
        />
      </div>

      <!-- Bottom right photo -->
      <div class="col-span-3 row-span-4 relative overflow-hidden">
        <img
          src="/projects-home-1.png"
          alt="Código en pantalla oscura"
          class="w-full h-full object-cover"
        />
      </div>
    </div>

    <!-- View All Link -->
    <div class="flex justify-end mt-6">
      <a
        href="#"
        class="text-white text-sm font-medium flex items-center gap-2 hover:scale-105 transition-colors"
      >
        VER TODAS
        <svg
          class="w-4 h-4 rotate-310 hover:rotate-0"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M18 8l4 4m0 0l-4 4m4-4H3"></path>
        </svg>
      </a>
    </div>
  </section>

  <!-- Modal para mostrar todos los proyectos -->
  <div
    id="allProjectsModal"
    class="fixed inset-0 bg-[rgba(0,0,0,0.8)] bg-opacity-50 flex items-center justify-center hidden z-50 p-4"
  >
    <div
      class="bg-white w-full max-w-6xl max-h-[90vh] rounded-2xl shadow-2xl overflow-hidden"
    >
      {/* Header del modal */}
      <div
        class="flex justify-between items-center p-6 border-b border-gray-200 bg-white sticky top-0 z-10"
      >
        <h2 class="text-2xl sm:text-3xl font-bold text-gray-900">
          Todos los Proyectos
        </h2>
        <button
          id="closeModal"
          class="text-gray-400 hover:text-gray-600 text-3xl font-light transition-colors"
        >
          &times;
        </button>
      </div>

      {/* Contenido del modal */}
      <div class="overflow-y-auto max-h-[calc(90vh-80px)] p-6">
        {/* Filtros del modal */}
        <div class="mb-6 pb-4 border-b border-gray-200">
          <div
            class="flex flex-col sm:flex-row gap-4 items-start sm:items-center justify-between"
          >
            <div class="flex flex-col sm:flex-row gap-3">
              <select
                id="modalYearFilter"
                class="px-4 py-2 border text-[var(--text-dark)] border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500"
              >
                <option value="">Todos los años</option>
                {years.map((year) => <option value={year}>{year}</option>)}
              </select>
              <input
                type="text"
                id="modalSearch"
                placeholder="Buscar proyecto..."
                class="px-4 py-2 border text-[var(--text-dark)] border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500"
              />
            </div>
            <div class="text-sm text-gray-500">
              <span id="projectCount">{projects.length}</span> proyectos encontrados
            </div>
          </div>
        </div>

        {/* Contenido organizado por años */}
        <div id="modalProjectsContainer">
          {
            years.map((year) => (
              <div class="modal-year-section mb-8" data-year={year}>
                <h3 class="text-2xl font-bold text-gray-800 mb-4 pb-2 border-b-2 border-blue-500">
                  {year}
                </h3>
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                  {projects
                    .filter((project) => project.data.developedyear === year)
                    .map((project) => {
                      const { data } = project;
                      const { title, description, img, get } = data;
                      const { git, site } = get;

                      return (
                        <div
                          class="modal-project bg-white border border-gray-200 rounded-xl overflow-hidden shadow-sm hover:shadow-md transition-all duration-300 hover:-translate-y-1"
                          data-title={title.toLowerCase()}
                          data-description={description.toLowerCase()}
                          data-year={year}
                        >
                          <div class="aspect-video overflow-hidden">
                            <img
                              src={img}
                              alt={title}
                              class="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
                            />
                          </div>
                          <div class="p-5">
                            <h4 class="text-lg font-semibold text-gray-900 mb-2 line-clamp-2">
                              {title}
                            </h4>
                            <p class="text-gray-600 text-sm mb-4 line-clamp-3 leading-relaxed">
                              {description}
                            </p>
                            <div class="flex flex-col sm:flex-row gap-2 sm:gap-3">
                              {site && (
                                <a
                                  href={site}
                                  target="_blank"
                                  rel="noopener noreferrer"
                                  class="inline-flex items-center justify-center px-4 py-2 text-[var(--text-blue-light)] text-sm font-medium rounded-lg hover:text-[var(--text-blue-dark)] transition-colors"
                                >
                                  Ver proyecto
                                  <svg
                                    class="ml-2 w-4 h-4"
                                    fill="none"
                                    stroke="currentColor"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      strokeLinecap="round"
                                      strokeLinejoin="round"
                                      strokeWidth={2}
                                      d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
                                    />
                                  </svg>
                                </a>
                              )}
                              {git && (
                                <a
                                  href={git}
                                  target="_blank"
                                  rel="noopener noreferrer"
                                  class="inline-flex items-center justify-center px-4 py-2 text-[var(--text-blue-light)] text-sm font-medium hover:text-[var(--text-blue-light)] transition-colors"
                                >
                                  Repositorio
                                  {/* <svg
                                  class="ml-2 w-4 h-4"
                                  fill="currentColor"
                                  viewBox="0 0 24 24"
                                >
                                  <path d="M12 0C5.37 0 0 5.37 0 12 0 17.31 3.435 21.795 8.205 23.385 8.805 23.49 9.03 23.13 9.03 22.815 9.03 22.53 9.015 21.585 9.015 20.475 5.67 21.135 4.965 18.795 4.965 18.795 4.425 17.475 3.63 17.115 3.63 17.115 2.55 16.425 3.705 16.44 3.705 16.44 4.815 16.665 5.445 17.79 5.445 17.79 6.495 19.455 8.175 18.915 9.075 18.585 9.18 17.79 9.495 17.25 9.84 16.92 7.17 16.59 4.38 15.555 4.38 11.07 4.38 9.795 4.845 8.76 6.045 8.76 6.045 7.005 5.985 4.005 7.695 4.005 7.695 5.265 3.825 7.035 3.825 7.035 8.55 3.93 10.725 3.93 12.84 4.905 13.005 6.135 13.23 7.515 13.275 8.73 13.275 10.695 13.125 12 13.125 17.385 18.435 21.795 12 21.795 5.37 21.795 0 16.425 0 12Z" />
                                </svg> */}
                                </a>
                              )}
                            </div>
                          </div>
                        </div>
                      );
                    })}
                </div>
              </div>
            ))
          }
        </div>

        {/* Mensaje cuando no hay resultados */}
        <div id="modalNoResults" class="text-center py-12 hidden">
          <div class="text-gray-400 text-6xl mb-4">
            <i class="fa-solid fa-search"></i>
          </div>
          <h3 class="text-xl font-semibold text-gray-700 mb-2">
            No se encontraron proyectos
          </h3>
          <p class="text-gray-500">
            Intenta con otros términos de búsqueda o filtros
          </p>
        </div>
      </div>
    </div>
  </div>

  <!-- Modal para mostrar todas las fotos -->
  <div
    id="allPhotosModal"
    class="fixed inset-0 bg-[rgba(0,0,0,0.85)] flex items-center justify-center hidden z-50 p-4"
  >
    <div
      class="bg-white w-full max-w-6xl max-h-[90vh] rounded-2xl shadow-2xl overflow-hidden"
    >
      <!-- Header del modal -->
      <div
        class="flex justify-between items-center p-6 border-b border-gray-200 sticky top-0 bg-white z-10"
      >
        <h2 class="text-2xl sm:text-3xl font-bold text-gray-900">
          Todas las Fotos
        </h2>
        <button
          id="closePhotosModal"
          class="text-gray-400 hover:text-gray-600 text-3xl font-light transition-colors"
        >
          &times;
        </button>
      </div>

      <!-- Contenido -->
      <div class="overflow-y-auto max-h-[calc(90vh-80px)] p-6">
        <div
          id="photosGrid"
          class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6"
        >
          <div class="photo-item relative group">
            <img
              src="/projects-home-1.png"
              alt="Foto 1"
              class="w-full h-60 object-cover rounded-lg shadow-md group-hover:scale-105 transition-transform duration-300"
            />
          </div>
          <div class="photo-item relative group">
            <img
              src="/projects-home-1.png"
              alt="Foto 2"
              class="w-full h-60 object-cover rounded-lg shadow-md group-hover:scale-105 transition-transform duration-300"
            />
          </div>
          <div class="photo-item relative group">
            <img
              src="/projects-home-1.png"
              alt="Foto 3"
              class="w-full h-60 object-cover rounded-lg shadow-md group-hover:scale-105 transition-transform duration-300"
            />
          </div>
          <div class="photo-item relative group">
            <img
              src="/projects-home-1.png"
              alt="Foto 1"
              class="w-full h-60 object-cover rounded-lg shadow-md group-hover:scale-105 transition-transform duration-300"
            />
          </div>
          <div class="photo-item relative group">
            <img
              src="/projects-home-1.png"
              alt="Foto 1"
              class="w-full h-60 object-cover rounded-lg shadow-md group-hover:scale-105 transition-transform duration-300"
            />
          </div>
        </div>
      </div>
    </div>
  </div>

  <Footer />
</Layout>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const showAllPhotosBtn = document.querySelector("a[href='#']");
    const photosModal = document.getElementById("allPhotosModal");
    const closePhotosModalBtn = document.getElementById("closePhotosModal");

    showAllPhotosBtn?.addEventListener("click", (e) => {
      e.preventDefault();
      photosModal?.classList.remove("hidden");
      document.body.style.overflow = "hidden";
    });

    function closePhotosModal() {
      photosModal?.classList.add("hidden");
      document.body.style.overflow = "auto";
    }

    closePhotosModalBtn?.addEventListener("click", closePhotosModal);

    photosModal?.addEventListener("click", (e) => {
      if (e.target === photosModal) closePhotosModal();
    });

    const searchInput = document.getElementById("search");
    const yearFilter = document.getElementById("yearFilter");
    const projects = document.querySelectorAll(".project-item");
    const noResults = document.getElementById("noResults");

    const showAllBtn = document.getElementById("showAllProjects");
    const modal = document.getElementById("allProjectsModal");
    const closeModalBtn = document.getElementById("closeModal");
    const modalSearch = document.getElementById("modalSearch");
    const modalYearFilter = document.getElementById("modalYearFilter");
    const modalProjects = document.querySelectorAll(".modal-project");
    const modalYearSections = document.querySelectorAll(".modal-year-section");
    const modalNoResults = document.getElementById("modalNoResults");
    const projectCount = document.getElementById("projectCount");

    projects.forEach((project, index) => {
      if (index >= 3) project.style.display = "none";
    });

    function filtrar() {
      const search = searchInput?.value.toLowerCase() || "";
      const year = yearFilter?.value || "";
      let visibleCount = 0;

      projects.forEach((project) => {
        const title = project.dataset.title || "";
        const description = project.dataset.description || "";
        const projectYear = project.dataset.year || "";

        const coincideBusqueda =
          !search || title.includes(search) || description.includes(search);
        const coincideYear = !year || projectYear === year;

        if (coincideBusqueda && coincideYear) {
          project.style.display = "block";
          visibleCount++;
        } else {
          project.style.display = "none";
        }
      });

      noResults?.classList.toggle("hidden", visibleCount !== 0);
    }

    function filtrarModal() {
      const search = modalSearch?.value.toLowerCase() || "";
      const year = modalYearFilter?.value || "";
      let visibleCount = 0;

      modalProjects?.forEach((project) => {
        const title = project.dataset.title || "";
        const description = project.dataset.description || "";
        const projectYear = project.dataset.year || "";

        const coincideBusqueda =
          !search || title.includes(search) || description.includes(search);
        const coincideYear = !year || projectYear === year;

        if (coincideBusqueda && coincideYear) {
          project.style.display = "block";
          visibleCount++;
        } else {
          project.style.display = "none";
        }
      });

      modalYearSections?.forEach((section) => {
        const sectionYear = section.dataset.year;
        const sectionProjects = section.querySelectorAll(".modal-project");
        let hasSectionVisible = false;

        sectionProjects.forEach((p) => {
          if (p.style.display !== "none") hasSectionVisible = true;
        });

        if (!year || year === sectionYear) {
          section.style.display = hasSectionVisible ? "block" : "none";
        } else {
          section.style.display = "none";
        }
      });

      if (projectCount) projectCount.textContent = visibleCount;
      modalNoResults?.classList.toggle("hidden", visibleCount !== 0);
      document
        .getElementById("modalProjectsContainer")
        ?.classList.toggle("hidden", visibleCount === 0);
    }

    showAllBtn?.addEventListener("click", () => {
      modal?.classList.remove("hidden");
      document.body.style.overflow = "hidden";
      if (modalSearch) modalSearch.value = "";
      if (modalYearFilter) modalYearFilter.value = "";
      filtrarModal();
    });

    function closeModal() {
      modal?.classList.add("hidden");
      document.body.style.overflow = "auto";
    }

    closeModalBtn?.addEventListener("click", closeModal);
    modal?.addEventListener("click", (e) => {
      if (e.target === modal) closeModal();
    });

    modalSearch?.addEventListener("input", filtrarModal);
    modalYearFilter?.addEventListener("change", filtrarModal);
    searchInput?.addEventListener("input", filtrar);
    searchInput?.addEventListener("keydown", (e) => {
      if (e.key === "Enter") {
        e.preventDefault();
        filtrar();
      }
    });
    yearFilter?.addEventListener("change", filtrar);

    const images = document.querySelectorAll(
      "section img, .photo-item img, .modal-project img"
    );
    const imageModal = document.getElementById("imageFullscreenModal");
    const fullscreenImage = document.getElementById("fullscreenImage");
    const closeImageBtn = document.getElementById("closeImageFullscreen");

    images.forEach((img) => {
      img.style.cursor = "zoom-in";
      img.addEventListener("click", () => {
        fullscreenImage.src = img.src;
        fullscreenImage.alt = img.alt || "Imagen ampliada";
        imageModal.classList.remove("hidden");
        document.body.style.overflow = "hidden";
      });
    });

    function closeImageModal() {
      imageModal?.classList.add("hidden");
      document.body.style.overflow = "auto";
    }

    closeImageBtn?.addEventListener("click", closeImageModal);
    imageModal?.addEventListener("click", (e) => {
      if (e.target === imageModal) closeImageModal();
    });

    document.addEventListener("keydown", (e) => {
      if (e.key === "Escape") {
        if (!photosModal?.classList.contains("hidden")) closePhotosModal();
        if (!modal?.classList.contains("hidden")) closeModal();
        if (!imageModal?.classList.contains("hidden")) closeImageModal();
      }
    });
  });
</script>

